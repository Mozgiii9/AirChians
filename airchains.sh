#!/bin/bash
source <(curl -s https://raw.githubusercontent.com/itrocket-team/testnet_guides/main/utils/common.sh)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
display_logo() {
  echo -e '\e[40m\e[32m'
  echo -e '‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó '
  echo -e '‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó'
  echo -e '‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù'
  echo -e '‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó'
  echo -e '‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë'
  echo -e '‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù'
  echo -e '\e[0m'
  echo -e "\n–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª may.crypto{ü¶Ö} —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ —Å–∞–º—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–æ–¥ - https://t.me/maycrypto\n"
}

display_logo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu() {
  while true; do
    echo -e "\n–ú–ï–ù–Æ –°–ö–†–ò–ü–¢–ê:\n"
    echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É Airchains"
    echo "2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –Ω–æ–¥—ã Airchains"
    echo "3. –°–æ–∑–¥–∞—Ç—å –∫–æ—à–µ–ª–µ–∫"
    echo "4. –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ—à–µ–ª–µ–∫"
    echo "5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞"
    echo "6. –°–æ–∑–¥–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ Airchains"
    echo "7. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏"
    echo "8. –ü–æ–∫–∏–Ω—É—Ç—å –º–µ–Ω—é —Å–∫—Ä–∏–ø—Ç–∞"
    echo
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

    case $choice in
      1)
        install_airchains_node
        ;;
      2)
        check_sync
        ;;
      3)
        create_wallet
        ;;
      4)
        import_wallet
        ;;
      5)
        check_balance
        ;;
      6)
        create_validator
        ;;
      7)
        check_logs
        ;;
      8)
        echo "–í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é —Å–∫—Ä–∏–ø—Ç–∞."
        exit 0
        ;;
      *)
        echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é."
        ;;
    esac
  done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã Airchains
install_airchains_node() {
  read -p "–°–æ–∑–¥–∞–π—Ç–µ –∏–º—è –∫–æ—à–µ–ª—å–∫–∞: " WALLET
  echo 'export WALLET='$WALLET
  read -p "–°–æ–∑–¥–∞–π—Ç–µ –∏–º—è –Ω–æ–¥—ã(MONIKER): " MONIKER
  echo 'export MONIKER='$MONIKER
  read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç, –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä 17, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ—Ä—Ç=26): " PORT
  echo 'export PORT='$PORT

  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  echo "export WALLET="$WALLET"" >> $HOME/.bash_profile
  echo "export MONIKER="$MONIKER"" >> $HOME/.bash_profile
  echo "export AIRCHAIN_CHAIN_ID="junction"" >> $HOME/.bash_profile
  echo "export AIRCHAIN_PORT="$PORT"" >> $HOME/.bash_profile
  source $HOME/.bash_profile

  printLine
  echo -e "MONIKER:        \e[1m\e[32m$MONIKER\e[0m"
  echo -e "–ö–æ—à–µ–ª–µ–∫:         \e[1m\e[32m$WALLET\e[0m"
  echo -e "Chain ID:       \e[1m\e[32m$AIRCHAIN_CHAIN_ID\e[0m"
  echo -e "PORT:  \e[1m\e[32m$AIRCHAIN_PORT\e[0m"
  printLine
  sleep 1

  printGreen "1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ go..." && sleep 1
  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ go, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
  cd $HOME
  VER="1.21.6"
  wget "https://golang.org/dl/go$VER.linux-amd64.tar.gz"
  sudo rm -rf /usr/local/go
  sudo tar -C /usr/local -xzf "go$VER.linux-amd64.tar.gz"
  rm "go$VER.linux-amd64.tar.gz"
  [ ! -f ~/.bash_profile ] && touch ~/.bash_profile
  echo "export PATH=$PATH:/usr/local/go/bin:~/go/bin" >> ~/.bash_profile
  source $HOME/.bash_profile
  [ ! -d ~/go/bin ] && mkdir -p ~/go/bin

  echo $(go version) && sleep 1

  source <(curl -s https://raw.githubusercontent.com/itrocket-team/testnet_guides/main/utils/dependencies_install)

  printGreen "4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..." && sleep 1
  # –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
  cd $HOME
  wget -O junctiond https://github.com/airchains-network/junction/releases/download/v0.1.0/junctiond
  chmod +x junctiond
  mv junctiond $HOME/go/bin/

  printGreen "5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." && sleep 1
  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  junctiond init $MONIKER --chain-id $AIRCHAIN_CHAIN_ID 
  sed -i -e "s|^node *=.*|node = \"tcp://localhost:${AIRCHAIN_PORT}657\"|" $HOME/.junction/config/client.toml
  sleep 1
  echo –≥–æ—Ç–æ–≤–æ

  printGreen "6. –ó–∞–≥—Ä—É–∑–∫–∞ genesis –∏ addrbook..." && sleep 1
  # –ó–∞–≥—Ä—É–∑–∫–∞ genesis –∏ addrbook
  wget -O $HOME/.junction/config/genesis.json https://server-4.itrocket.net/testnet/airchains/genesis.json
  wget -O $HOME/.junction/config/addrbook.json  https://server-4.itrocket.net/testnet/airchains/addrbook.json
  sleep 1
  echo –≥–æ—Ç–æ–≤–æ

  printGreen "7. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ seeds, peers, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–æ—Ä—Ç–æ–≤, –æ–±—Ä–µ–∑–∫–∞, –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –≥–∞–∑–∞..." && sleep 1
  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ seeds –∏ peers
  SEEDS="04e2fdd6ec8f23729f24245171eaceae5219aa91@airchains-testnet-seed.itrocket.net:19656"
  PEERS="e929f77cfe4cd7d51433f438d3b764937e799313@airchains-testnet-peer.itrocket.net:19656,999a234d17ef264cdccad3dbbe489404270452c1@65.108.126.173:26656,575e98598e9813a26576759c7ef70fd38d2516a4@65.109.113.251:15656,2f17d7cffd83c2e3a0dab853d11092aca1c73e99@49.12.126.32:43456,de2e7251667dee5de5eed98e54a58749fadd23d8@34.77.82.65:26656,36ed02b04e84fb0ba6382d8d1cd2dbe3195a235b@37.27.64.237:10156,d1c949abeb7805546eca0b5e60c4889649760b9c@65.108.121.227:13356,dc189095edccb7af8d8c88cd5b9a3ccd25be1115@65.21.215.142:63656,228e8e13105f6701b2f640eb2d27d14403060df2@64.44.171.196:26656,f2f47fefc40d2311e5578730d95a06ce2f3b7ee7@185.232.70.33:26656,5880ddf4518b061c111ae6bf07b1ef76ef9ed284@65.109.93.58:55656,12d5f5427c99a1625172e3f71440d098e1c8fd7e@51.159.161.79:36656,c8ec06c59bd114d23668dd1a9b13e46481f79f3d@5.189.166.225:26656,cff1962f68db9c2c4c32a5c9c19c0ffed23e72f1@65.109.93.59:31656"
  sed -i.bak -e "s/^seeds =.*/seeds = \"$SEEDS\"/" $HOME/.junction/config/config.toml
  sed -i.bak -e "s/^persistent_peers =.*/persistent_peers = \"$PEERS\"/" $HOME/.junction/config/config.toml

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–æ–≤
  sed -i.bak -e "s%:26658%:${AIRCHAIN_PORT}658%g;
  s%:26657%:${AIRCHAIN_PORT}657%g;
  s%:6060%:${AIRCHAIN_PORT}060%g;
  s%:26656%:${AIRCHAIN_PORT}656%g;
  s%^external_address = \"\"%external_address = \"$(wget -qO- eth0.me):${AIRCHAIN_PORT}656\"%;
  s%:26660%:${AIRCHAIN_PORT}660%g" $HOME/.junction/config/config.toml

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–µ–∑–∫–∏
  sed -i -e "s/^pruning *=.*/pruning = \"custom\"/" $HOME/.junction/config/app.toml
  sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"100\"/" $HOME/.junction/config/app.toml
  sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"50\"/" $HOME/.junction/config/app.toml

  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –≥–∞–∑–∞, –≤–∫–ª—é—á–µ–Ω–∏–µ prometheus –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è
  sed -i 's|minimum-gas-prices =.*|minimum-gas-prices = "0.001amf"|g' $HOME/.junction/config/app.toml
  sed -i -e "s/prometheus = false/prometheus = true/" $HOME/.junction/config/config.toml
  sed -i -e "s/^indexer *=.*/indexer = \"null\"/" $HOME/.junction/config/config.toml
  sleep 1
  echo –≥–æ—Ç–æ–≤–æ

  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–∏—Å–∞
  sudo tee /etc/systemd/system/junctiond.service > /dev/null <<EOF
[Unit]
Description=–£–∑–µ–ª airchains
After=network-online.target
[Service]
User=$USER
WorkingDirectory=$HOME/.junction
ExecStart=$(which junctiond) start --home $HOME/.junction
Restart=on-failure
RestartSec=5
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

  printGreen "8. –ó–∞–≥—Ä—É–∑–∫–∞ Snapshot'a –∏ –∑–∞–ø—É—Å–∫ —É–∑–ª–∞..." && sleep 1
  # –°–±—Ä–æ—Å –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Å–Ω–µ–ø—à–æ—Ç–∞
  junctiond tendermint unsafe-reset-all --home $HOME/.junction
  if curl -s --head curl https://snapshots-testnet.nodejumper.io/airchains-testnet/airchains-testnet_latest.tar.lz4 | head -n 1 | grep "200" > /dev/null; then
    curl https://snapshots-testnet.nodejumper.io/airchains-testnet/airchains-testnet_latest.tar.lz4 | lz4 -dc - | tar -xf - -C $HOME/.junction
  else
    echo "Snapshot –Ω–µ –Ω–∞–π–¥–µ–Ω"
  fi
  
  # –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
  sudo systemctl daemon-reload
  sudo systemctl enable junctiond
  sudo systemctl restart junctiond

  echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –º–µ–Ω—é..."
  sleep 2
  main_menu
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–æ–¥—ã
check_sync() {
  junctiond status 2>&1 | jq
  echo "–ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–≥–¥–∞ 'catching_up' —Å—Ç–∞–Ω–µ—Ç 'false'."
  sleep 2
  main_menu
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
create_wallet() {
  read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ—à–µ–ª—å–∫–∞: " WALLET
  junctiond keys add $WALLET

  WALLET_ADDRESS=$(junctiond keys show $WALLET -a)
  VALOPER_ADDRESS=$(junctiond keys show $WALLET --bech val -a)
  echo "export WALLET_ADDRESS="$WALLET_ADDRESS >> $HOME/.bash_profile
  echo "export VALOPER_ADDRESS="$VALOPER_ADDRESS >> $HOME/.bash_profile
  source $HOME/.bash_profile

  echo "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–æ—à–µ–ª—å–∫–∞ –≤ –Ω–∞–¥–µ–∂–Ω–æ–µ –º–µ—Å—Ç–æ!"
  sleep 2
  main_menu
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∫–æ—à–µ–ª—å–∫–∞
import_wallet() {
  read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ—à–µ–ª—å–∫–∞: " WALLET
  junctiond keys add $WALLET --recover

  WALLET_ADDRESS=$(junctiond keys show $WALLET -a)
  VALOPER_ADDRESS=$(junctiond keys show $WALLET --bech val -a)
  echo "export WALLET_ADDRESS="$WALLET_ADDRESS >> $HOME/.bash_profile
  echo "export VALOPER_ADDRESS="$VALOPER_ADDRESS >> $HOME/.bash_profile
  source $HOME/.bash_profile

  echo "–ö–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω."
  sleep 2
  main_menu
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –∫–æ—à–µ–ª—å–∫–∞
check_balance() {
  junctiond query bank balances $WALLET_ADDRESS
  sleep 2
  main_menu
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
create_validator() {
  cd $HOME
  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ validator.json
  echo "{\"pubkey\":{\"@type\":\"/cosmos.crypto.ed25519.PubKey\",\"key\":\"$(junctiond comet show-validator | grep -Po '\"key\":\s*\"\K[^"]*')\"},
    \"amount\": \"1000000amf\",
    \"moniker\": \"NodeRunner\",
    \"identity\": \"\",
    \"website\": \"\",
    \"security\": \"\",
    \"details\": \"NodeRunner Member 2024\",
    \"commission-rate\": \"0.1\",
    \"commission-max-rate\": \"0.2\",
    \"commission-max-change-rate\": \"0.01\",
    \"min-self-delegation\": \"1\"
  }" > validator.json

  # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º JSON-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  junctiond tx staking create-validator validator.json \
      --from $WALLET \
      --chain-id junction \
      --fees 200amf

  echo "–í–∞–ª–∏–¥–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"
  sleep 2
  main_menu
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤
check_logs() {
  echo "–ß–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –Ω–∞—á–Ω–µ—Ç—Å—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –Ω–æ–¥—ã Airchains... –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ CTRL+C"
  sleep 10
  junctiond status 2>&1 | jq
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu
